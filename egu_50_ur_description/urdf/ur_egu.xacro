
<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">


  <!-- Definition of the main macro -->
  <xacro:macro name="ur10e_egu_robot" params="
   prefix=ur10e_
   joint_limits_parameters_file:='$(find ur_description)/config/ur10e/joint_limits.yaml'
   kinematics_parameters_file:='$(find ur_description)/config/ur10e/default_kinematics.yaml'
   physical_parameters_file:='$(find ur_description)/config/ur10e/physical_parameters.yaml'
   visual_parameters_file:='$(find ur_description)/config/ur10e/visual_parameters.yaml'
   transmission_hw_interface:=hardware_interface/EffortJointInterface
   safety_limits:=false
   safety_pos_margin:=0.15
   safety_k_position:=20">


    <!-- imports -->
    <xacro:include filename="$(find ur_description)/urdf/inc/ur_macro.xacro"/>
    <xacro:include filename="$(find egu_50_description)/urdf/egu_50.xacro"/>

    <!-- Instantiate model for the REAL robot. -->
    
    <xacro:egu_50 prefix_1="egu" prefix_2="fingers" meshType="dae" />

    <xacro:ur_robot
      prefix="${prefix}"
      joint_limits_parameters_file="${joint_limits_parameters_file}"
      kinematics_parameters_file="${kinematics_parameters_file}"
      physical_parameters_file="${physical_parameters_file}"
      visual_parameters_file="${visual_parameters_file}"
      transmission_hw_interface="${transmission_hw_interface}"
      safety_limits="${safety_limits}"
      safety_pos_margin="${safety_pos_margin}"
      safety_k_position="${safety_k_position}"
    />

    <!-- Configure self collision properties per link -->
    <gazebo reference="${prefix}shoulder_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}upper_arm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}forearm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_1_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_3_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_2_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}ee_link">
      <selfCollide>true</selfCollide>
    </gazebo>

    <link name="world"/>
    <joint name="world_joint" type="fixed">
      <parent link="world"/>1
      <child link="${prefix}base_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="tool0_controller"/>
    <joint name="tool_controller_fake_joint" type="fixed">
      <parent link="${prefix}tool0"/>
      <child link="tool0_controller"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>
    
    
    <joint name="ur_egu_connection" type="fixed">
      <parent link="tool0_controller"/>
      <child link="egu_base_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <!--
      Inject Gazebo ROS Control plugin, which allows us to use ros_control
      controllers to control the virtual robot hw.
    -->
    <gazebo>
      <plugin name="ros_control" filename="libgazebo_ros_control.so">
        <!--robotNamespace>/</robotNamespace-->
        <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->
      </plugin>
    </gazebo>
  </xacro:macro>
</robot>